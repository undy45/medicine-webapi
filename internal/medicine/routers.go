/*
 * Medicine Inventory API
 *
 * Medicine inventory management for Web-In-Cloud system
 *
 * API version: 1.0.0
 * Contact: your_email@stuba.sk
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package medicine

import (
	"net/http"

	"github.com/gin-gonic/gin"
)

// Route is the information for every URI.
type Route struct {
	// Name is the name of this Route.
	Name string
	// Method is the string for the HTTP method. ex) GET, POST etc..
	Method string
	// Pattern is the pattern of the URI.
	Pattern string
	// HandlerFunc is the handler function of this route.
	HandlerFunc gin.HandlerFunc
}

// NewRouter returns a new router.
func NewRouter(handleFunctions ApiHandleFunctions) *gin.Engine {
	return NewRouterWithGinEngine(gin.Default(), handleFunctions)
}

// NewRouter add routes to existing gin engine.
func NewRouterWithGinEngine(router *gin.Engine, handleFunctions ApiHandleFunctions) *gin.Engine {
	for _, route := range getRoutes(handleFunctions) {
		if route.HandlerFunc == nil {
			route.HandlerFunc = DefaultHandleFunc
		}
		switch route.Method {
		case http.MethodGet:
			router.GET(route.Pattern, route.HandlerFunc)
		case http.MethodPost:
			router.POST(route.Pattern, route.HandlerFunc)
		case http.MethodPut:
			router.PUT(route.Pattern, route.HandlerFunc)
		case http.MethodPatch:
			router.PATCH(route.Pattern, route.HandlerFunc)
		case http.MethodDelete:
			router.DELETE(route.Pattern, route.HandlerFunc)
		}
	}

	return router
}

// Default handler for not yet implemented routes
func DefaultHandleFunc(c *gin.Context) {
	c.String(http.StatusNotImplemented, "501 not implemented")
}

type ApiHandleFunctions struct {

	// Routes for the AmbulancesAPI part of the API
	AmbulancesAPI AmbulancesAPI
	// Routes for the MedicineInventoryAPI part of the API
	MedicineInventoryAPI MedicineInventoryAPI
	// Routes for the MedicineOrderAPI part of the API
	MedicineOrderAPI MedicineOrderAPI
	// Routes for the OrderStatusesAPI part of the API
	OrderStatusesAPI OrderStatusesAPI
}

func getRoutes(handleFunctions ApiHandleFunctions) []Route {
	return []Route{
		{
			"CreateAmbulance",
			http.MethodPost,
			"/api/ambulance",
			handleFunctions.AmbulancesAPI.CreateAmbulance,
		},
		{
			"DeleteAmbulance",
			http.MethodDelete,
			"/api/ambulance/:ambulanceId",
			handleFunctions.AmbulancesAPI.DeleteAmbulance,
		},
		{
			"DeleteMedicineInventoryEntry",
			http.MethodDelete,
			"/api/medicine-inventory/:ambulanceId/entries/:entryId",
			handleFunctions.MedicineInventoryAPI.DeleteMedicineInventoryEntry,
		},
		{
			"GetMedicineInventoryEntries",
			http.MethodGet,
			"/api/medicine-inventory/:ambulanceId/entries",
			handleFunctions.MedicineInventoryAPI.GetMedicineInventoryEntries,
		},
		{
			"GetMedicineInventoryEntry",
			http.MethodGet,
			"/api/medicine-inventory/:ambulanceId/entries/:entryId",
			handleFunctions.MedicineInventoryAPI.GetMedicineInventoryEntry,
		},
		{
			"UpdateMedicineInventoryEntry",
			http.MethodPut,
			"/api/medicine-inventory/:ambulanceId/entries/:entryId",
			handleFunctions.MedicineInventoryAPI.UpdateMedicineInventoryEntry,
		},
		{
			"CreateMedicineOrderEntry",
			http.MethodPost,
			"/api/medicine-order/:ambulanceId/entries",
			handleFunctions.MedicineOrderAPI.CreateMedicineOrderEntry,
		},
		{
			"DeleteMedicineOrderEntry",
			http.MethodDelete,
			"/api/medicine-order/:ambulanceId/entries/:entryId",
			handleFunctions.MedicineOrderAPI.DeleteMedicineOrderEntry,
		},
		{
			"GetMedicineOrderEntries",
			http.MethodGet,
			"/api/medicine-order/:ambulanceId/entries",
			handleFunctions.MedicineOrderAPI.GetMedicineOrderEntries,
		},
		{
			"GetMedicineOrderEntry",
			http.MethodGet,
			"/api/medicine-order/:ambulanceId/entries/:entryId",
			handleFunctions.MedicineOrderAPI.GetMedicineOrderEntry,
		},
		{
			"UpdateMedicineOrderEntry",
			http.MethodPut,
			"/api/medicine-order/:ambulanceId/entries/:entryId",
			handleFunctions.MedicineOrderAPI.UpdateMedicineOrderEntry,
		},
		{
			"GetStatus",
			http.MethodGet,
			"/api/medicine-order/statuses/:statusId",
			handleFunctions.OrderStatusesAPI.GetStatus,
		},
		{
			"GetStatuses",
			http.MethodGet,
			"/api/medicine-order/statuses",
			handleFunctions.OrderStatusesAPI.GetStatuses,
		},
	}
}
